// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DoctorsWebApplication.Models;

[Table("Doctor")]
[Microsoft.EntityFrameworkCore.Index("PersonId", Name = "IX_Doctor", IsUnique = true)]
[Microsoft.EntityFrameworkCore.Index("GPSurgeryId", Name = "IX_Doctor_GPSurgeryId")]
public partial class Doctor
{
    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int DoctorId { get; set; }

    public int PersonId { get; set; }

    [Required]
    [StringLength(250)]
    public string Title { get; set; }

    [Required]
    [StringLength(250)]
    public string Abbreviations { get; set; }

    [Column(TypeName = "datetime")]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public DateTime ModifiedDate { get; set; }

    [StringLength(256)]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public string ModifiedBy { get; set; }

    [Column(TypeName = "datetime")]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public DateTime CreatedDate { get; set; }

    [StringLength(256)]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public string CreatedBy { get; set; }

    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public Guid rowguid { get; set; }

    public int GPSurgeryId { get; set; }

    [InverseProperty("Doctor")]
    public virtual ICollection<Appointment> Appointments { get; } = new List<Appointment>();

    [InverseProperty("Doctor")]
    public virtual ICollection<DoctorFee> DoctorFees { get; } = new List<DoctorFee>();

    [ForeignKey("GPSurgeryId")]
    [InverseProperty("Doctors")]
    public virtual GPSurgery GPSurgery { get; set; }

    [ForeignKey("PersonId")]
    [InverseProperty("Doctor")]
    public virtual Person Person { get; set; }

    [InverseProperty("Doctor")]
    public virtual ICollection<PrescribedDrug> PrescribedDrugs { get; } = new List<PrescribedDrug>();

    [InverseProperty("Doctor")]
    public virtual ICollection<Qualification> Qualifications { get; } = new List<Qualification>();

    [InverseProperty("Doctor")]
    public virtual ICollection<Patient> Patients { get; } = new List<Patient>();

}