// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Text;
using Microsoft.EntityFrameworkCore;

namespace DoctorsWebApplication.Models;

[Table("Person")]
public partial class Person
{
    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int PersonId { get; set; }

    [Required]
    [StringLength(250)]
    public string FirstName { get; set; }

    [StringLength(250)]
    public string MiddleName { get; set; }

    [Required]
    [StringLength(250)]
    public string LastName { get; set; }

    public string CombinedName
    {
        get
        {
            string[] names = new string[] { this.FirstName, this.MiddleName, this.LastName };
            StringBuilder sb = new StringBuilder();
            foreach (var name in names)
            {
                sb.Append(name);
                sb.Append(' ');
            }
            return sb.ToString().TrimEnd();
        }
    }

    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public Guid rowguid { get; set; }

    [Column(TypeName = "datetime")]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public DateTime ModifiedDate { get; set; }

    [StringLength(256)]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public string ModifiedBy { get; set; }

    [Column(TypeName = "datetime")]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public DateTime CreatedDate { get; set; }

    [StringLength(256)]
    [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
    public string CreatedBy { get; set; }

    [Column(TypeName = "datetime")]
    [DisplayFormat(DataFormatString ="{0:dd/MM/yyyy}")]
    [DataType(DataType.Date)]
    public DateTime DateOfBirth { get; set; }

    [InverseProperty("Person")]
    public virtual ICollection<Address> Addresses { get; } = new List<Address>();

    [InverseProperty("Person")]
    public virtual Doctor Doctor { get; set; }

    [InverseProperty("Person")]
    public virtual ICollection<EmailAddress> EmailAddresses { get; } = new List<EmailAddress>();

    [InverseProperty("Person")]
    public virtual Patient Patient { get; set; }

    [InverseProperty("Person")]
    public virtual ICollection<PhoneNumber> PhoneNumbers { get; } = new List<PhoneNumber>();
}